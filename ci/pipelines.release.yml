pipelines:
  - name: release_teamcity
    configuration:
      runtime:
        type: image
        image:
          auto:
            language: java
            versions:
              - "8"
      environmentVariables:
        readOnly:
          NEXT_VERSION: 0.0.0
          NEXT_DEVELOPMENT_VERSION: 0.0.x-SNAPSHOT
          AUDIT_FAIL: "false"

    steps:
      - name: Release
        type: Bash
        configuration:
          inputResources:
            - name: teamcityReleaseGit
          integrations:
            - name: il_automation
            - name: ecosys_entplus_deployer
            - name: jetbrains
        execution:
          onStart:
            - restore_cache_files m2_home ${HOME}/.m2
          onExecute:
            - cd $res_teamcityReleaseGit_resourcePath

            # Set env
            - export CI=true
            - export JFROG_CLI_BUILD_NAME=teamcity-artifactory-plugin
            - export JFROG_CLI_BUILD_NUMBER=$run_number
            - export JFROG_CLI_BUILD_PROJECT=ecosys

            # Configure git
            - git checkout release
            - git remote set-url origin https://$int_il_automation_token@github.com/jfrog/teamcity-artifactory-plugin.git

            # Make sure versions provided
            - echo "Checking variables"
            - test -n "$NEXT_VERSION" -a "$NEXT_VERSION" != "0.0.0"
            - test -n "$NEXT_DEVELOPMENT_VERSION" -a "$NEXT_DEVELOPMENT_VERSION" != "0.0.x-SNAPSHOT"

            # Configure JFrog CLI
            - curl -fL https://install-cli.jfrog.io | sh
            - jf c rm --quiet
            - jf c add internal --url=$int_ecosys_entplus_deployer_url --user=$int_ecosys_entplus_deployer_user --password=$int_ecosys_entplus_deployer_apikey
            - jf mvnc
              --repo-resolve-releases ecosys-teamcity-repos --repo-resolve-snapshots ecosys-teamcity-repos
              --repo-deploy-releases ecosys-oss-release-local --repo-deploy-snapshots ecosys-oss-snapshot-local

            # Sync changes with master
            - git merge origin/master

            # Update version
            - env -i PATH=$PATH mvn versions:set -DnewVersion="${NEXT_VERSION}" -B
            - git commit -am "[artifactory-release] Release version ${NEXT_VERSION} [skipRun]" --allow-empty
            - git tag ${NEXT_VERSION}

            # Run audit
            - jf audit --fail=${AUDIT_FAIL:-false}

            # Run install and publish
            - >
              env -i PATH=$PATH HOME=$HOME
              JFROG_CLI_BUILD_NAME=$JFROG_CLI_BUILD_NAME
              JFROG_CLI_BUILD_NUMBER=$JFROG_CLI_BUILD_NUMBER
              JFROG_CLI_BUILD_PROJECT=$JFROG_CLI_BUILD_PROJECT
              jf mvn clean install -U -B
            - jf rt u --flat=true target/teamcity-artifactory-plugin-$NEXT_VERSION.zip ecosys-oss-release-local/org/jfrog/teamcity/teamcity-artifactory-plugin/$NEXT_VERSION/
            - jf rt bag && jf rt bce
            - jf rt bp

            # Distribute release bundle
            - jf ds rbc ecosystem-teamcity-artifactory-plugin $NEXT_VERSION --spec=./ci/specs/prod-rbc-filespec.json --spec-vars="version=$NEXT_VERSION" --sign
            - jf ds rbd ecosystem-teamcity-artifactory-plugin $NEXT_VERSION --site="releases.jfrog.io" --sync

            # Upload to Jetbrains marketplace
            - curl -i --header "Authorization:Bearer $int_jetbrains_token" -F pluginId=9082 -F file=@target/teamcity-artifactory-plugin-$NEXT_VERSION.zip https://plugins.jetbrains.com/plugin/uploadPlugin

            # Update next development version
            - env -i PATH=$PATH M2_HOME=$M2_HOME HOME=$HOME mvn versions:set -DnewVersion=$NEXT_DEVELOPMENT_VERSION -B
            - git commit -am "[artifactory-release] Next development version [skipRun]"
            - git push

            # Merge changes to master
            - git checkout master
            - git merge origin/release
            - git push
            - git push --tags

          onComplete:
            # Show tests in the *Tests* tab
            - save_tests $res_teamcityReleaseGit_resourcePath/agent/target/surefire-reports/junitreports
            - save_tests $res_teamcityReleaseGit_resourcePath/server/target/surefire-reports/junitreports

            # Save .m2 cache
            - add_cache_files ${HOME}/.m2 m2_home
